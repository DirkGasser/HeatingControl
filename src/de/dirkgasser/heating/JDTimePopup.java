package de.dirkgasser.heating;

import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Locale;

/**
 * Pop up to edit local time
 * @author Dirk Gasser
 */
public class JDTimePopup extends javax.swing.JDialog {
    private LocalTime time;
    private LocalTime minTime;
    private LocalTime maxTime;
    private LocalTime newTime;
    DateTimeFormatter dtfh = DateTimeFormatter.ofPattern("HH");
    DateTimeFormatter dtfm = DateTimeFormatter.ofPattern("mm");

    /**
     * Creates new form JDTimePopup
     */
    private JDTimePopup(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    public JDTimePopup (java.awt.Frame parent, boolean modal, LocalTime time, LocalTime minTime, LocalTime maxTime) {
        this(parent, modal);
        this.time = time;
        this.minTime = minTime;
        this.maxTime = maxTime;
        jLtimeToSethh.setText(time.format(dtfh));
        jLtimeToSetmm.setText(time.format(dtfm));
    }
    
    public LocalTime getTimeBack () {
        this.setVisible(true);
        return time;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLtimeToSethh = new javax.swing.JLabel();
        JBtimeDecreasehh = new javax.swing.JButton();
        jBtimeIncreasehh = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLtimeToSetmm = new javax.swing.JLabel();
        JBtimeDecreasemm = new javax.swing.JButton();
        jBtimeIncreasemm = new javax.swing.JButton();
        JBtimeDecreasemd = new javax.swing.JButton();
        jBtimeIncreasemd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(350, 250));
        setResizable(false);

        jLtimeToSethh.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLtimeToSethh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLtimeToSethh.setText("12");
        jLtimeToSethh.setMinimumSize(new java.awt.Dimension(120, 30));
        jLtimeToSethh.setPreferredSize(new java.awt.Dimension(120, 40));

        JBtimeDecreasehh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/dirkgasser/heating/prev.png"))); // NOI18N
        JBtimeDecreasehh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtimeDecreasehhActionPerformed(evt);
            }
        });

        jBtimeIncreasehh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/dirkgasser/heating/next.png"))); // NOI18N
        jBtimeIncreasehh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtimeIncreasehhActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setText("ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLtimeToSetmm.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLtimeToSetmm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLtimeToSetmm.setText("00");
        jLtimeToSetmm.setMinimumSize(new java.awt.Dimension(120, 30));
        jLtimeToSetmm.setPreferredSize(new java.awt.Dimension(120, 40));

        JBtimeDecreasemm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/dirkgasser/heating/prev.png"))); // NOI18N
        JBtimeDecreasemm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtimeDecreasemmActionPerformed(evt);
            }
        });

        jBtimeIncreasemm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/dirkgasser/heating/next.png"))); // NOI18N
        jBtimeIncreasemm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtimeIncreasemmActionPerformed(evt);
            }
        });

        JBtimeDecreasemd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/dirkgasser/heating/prevprev.png"))); // NOI18N
        JBtimeDecreasemd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtimeDecreasemdActionPerformed(evt);
            }
        });

        jBtimeIncreasemd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/dirkgasser/heating/nextnext.png"))); // NOI18N
        jBtimeIncreasemd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtimeIncreasemdActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText(":");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(JBtimeDecreasemm)
                            .addComponent(JBtimeDecreasehh)
                            .addComponent(JBtimeDecreasemd))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLtimeToSetmm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLtimeToSethh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtimeIncreasehh)
                            .addComponent(jBtimeIncreasemm)
                            .addComponent(jBtimeIncreasemd)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jButton1)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JBtimeDecreasehh)
                    .addComponent(jBtimeIncreasehh)
                    .addComponent(jLtimeToSethh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(JBtimeDecreasemm)
                        .addGap(18, 18, 18)
                        .addComponent(JBtimeDecreasemd)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jBtimeIncreasemm)
                        .addGap(18, 18, 18)
                        .addComponent(jBtimeIncreasemd)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLtimeToSetmm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(48, 48, 48))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void JBtimeDecreasemmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtimeDecreasemmActionPerformed
        // TODO add your handling code here:
        newTime = time.minusMinutes(1);
        if (minTime.isBefore(newTime) || minTime.equals(LocalTime.of(0, 0)) ) {
            time = newTime;
            jLtimeToSetmm.setText(time.format(dtfm));
            jLtimeToSethh.setText(time.format(dtfh));
        }
    }//GEN-LAST:event_JBtimeDecreasemmActionPerformed

    private void JBtimeDecreasemdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtimeDecreasemdActionPerformed
        // TODO add your handling code here:
        newTime = time.minusMinutes(10);
        if (minTime.isBefore(newTime)) {
            time = newTime;
            jLtimeToSetmm.setText(time.format(dtfm));
            jLtimeToSethh.setText(time.format(dtfh));
        }
    }//GEN-LAST:event_JBtimeDecreasemdActionPerformed

    private void JBtimeDecreasehhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtimeDecreasehhActionPerformed
        // TODO add your handling code here:
        newTime = time.minusHours(1);
        if (minTime.isBefore(newTime)) {
            time = newTime;
            jLtimeToSethh.setText(time.format(dtfh));
        }
    }//GEN-LAST:event_JBtimeDecreasehhActionPerformed

    private void jBtimeIncreasehhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtimeIncreasehhActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        newTime = time.plusHours(1);
        if (maxTime.isAfter(newTime) || maxTime.equals(LocalTime.of(23, 59))) {
            time = newTime;
            jLtimeToSethh.setText(time.format(dtfh));
        }
    }//GEN-LAST:event_jBtimeIncreasehhActionPerformed

    private void jBtimeIncreasemmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtimeIncreasemmActionPerformed
        // TODO add your handling code here:
        newTime = time.plusMinutes(1);
        if (maxTime.isAfter(newTime)) {
            time = newTime;
            jLtimeToSetmm.setText(time.format(dtfm));
            jLtimeToSethh.setText(time.format(dtfh));
        }
    }//GEN-LAST:event_jBtimeIncreasemmActionPerformed

    private void jBtimeIncreasemdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtimeIncreasemdActionPerformed
        // TODO add your handling code here:
        newTime = time.plusMinutes(10);
        if (maxTime.isAfter(newTime)) {
            time = newTime;
            jLtimeToSetmm.setText(time.format(dtfm));
            jLtimeToSethh.setText(time.format(dtfh));
        }
    }//GEN-LAST:event_jBtimeIncreasemdActionPerformed


   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtimeDecreasehh;
    private javax.swing.JButton JBtimeDecreasemd;
    private javax.swing.JButton JBtimeDecreasemm;
    private javax.swing.JButton jBtimeIncreasehh;
    private javax.swing.JButton jBtimeIncreasemd;
    private javax.swing.JButton jBtimeIncreasemm;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLtimeToSethh;
    private javax.swing.JLabel jLtimeToSetmm;
    // End of variables declaration//GEN-END:variables
}
